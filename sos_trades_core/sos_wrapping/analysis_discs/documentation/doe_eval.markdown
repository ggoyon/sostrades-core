# Documentation for the DoE_eval driver (Draft version)

The DoE_Eval driver is a driver to do Design of Experiment (DoE). 

It allows to generate an input sample of data to be run on the nested sub_process: a loop is performed on all row of this sample, so as to compute the nested sub_process. 

The sample is either generated based on a selected alghorithm of DoE (lhs, fullfactorial, ...), or provided by the user (Custom DoE).

The selected input variables for the sample are provided by the Eval_input selector.
In the same way the selected output variables are provided by the Eval_output selector.

In case of a sample generated by an algorithm the variables should be in the following types : ['float', 'array', 'int', 'string']

In case of a custom doe, the sample may have more variables (for its columns) as what is selected in the Eval_input selector, but should almost have all selected variables. The order of the columns in the sample may not be in the same order as those provided by Eval_in.

In any case a SAMPLES_INPUTS_DF is shown in the outputs. Its columns follow the Eval_in order and it has only the used variable for the DoE (In case of a custom Doe with more column, only selected Eval_in variables are kept in this dataset table).



## GUI inputs : Selected example
![Example of doe process](./doe_eval_png/DoE_Eval_01.PNG)

![Study creation](./doe_eval_png/DoE_Eval_02.PNG)

## GUI inputs : Overview

![Tree view example](./doe_eval_png/DoE_Eval_03.PNG)

![Main inputs](./doe_eval_png/DoE_Eval_04.PNG)

## GUI inputs: Inputs/Outputs selection

You will need to select the input variables that you select for your DoE. It is the variable that will change. The other variable will be fixed and get the value of reference provided in the sub-process.
You almost need to select one output.

![Eval in](./doe_eval_png/DoE_Eval_05.PNG)
You will also need to select the output variables to be displayed at the end of a run. 
![Eval out](./doe_eval_png/DoE_Eval_06.PNG)

You almost need to select one output. 

You will then have after configuration a read_only empty "Input Samples Data" (it will be the sample that is provide/created and run in the doe): 
![Eval out](./doe_eval_png/DoE_Eval_11.PNG)

You also have as many dict of variables (empty and in read only) as you have selected output variables : here "obj_dict" as we have selected the obj variable.
Each variables after a run with have the size of the input sample "Input Samples Data".

## GUI inputs: algorithm selection 
![Eval in](./doe_eval_png/DoE_Eval_07.PNG)

## GUI inputs: CustomDOE selection 
In case of a CustomDOE you will get (after configuration):
![Eval in](./doe_eval_png/DoE_Eval_12.PNG)
![Eval in](./doe_eval_png/DoE_Eval_13.PNG)
![Eval in](./doe_eval_png/DoE_Eval_14.PNG)

Warning: 
- The CustomDOE CAN have more column variables as the selected variables in Eval_input: the extra variables will not be taken into account. A warning message will tell you what are the extra column variables not taken into account. It will be the reference value of the variable (provided in the sub_process) that will be used in the run
- The CustomDOE MUST HAVE at least all the selected variables in Eval_input: if not then it will rise an exception error with a message telling you what are the missing variables

## GUI inputs: doe generation algorithm selection
In other case you will et (after configuration):
![Eval in](./doe_eval_png/DoE_Eval_08.PNG)
![Eval in](./doe_eval_png/DoE_Eval_09.PNG)
![Eval in](./doe_eval_png/DoE_Eval_10.PNG)

Warning: the type of selected variables in Eval_in MUST be in the following types ['float', 'array', 'int', 'string']

For more information about the provided algorithms, please read :
https://gemseo.readthedocs.io/en/stable/algorithms/doe_algos.html

## GUI inputs: subprocess reference inputs
![Eval in](./doe_eval_png/DoE_Eval_15.PNG)
![Eval in](./doe_eval_png/DoE_Eval_18.PNG)
![Eval in](./doe_eval_png/DoE_Eval_19.PNG)
## GUI inputs: run
![Eval in](./doe_eval_png/DoE_Eval_16.PNG)
![Eval in](./doe_eval_png/DoE_Eval_17.PNG)
![Eval in](./doe_eval_png/DoE_Eval_20.PNG)

## GUI outputs: 
![Eval in](./doe_eval_png/DoE_Eval_21.PNG)
![Eval in](./doe_eval_png/DoE_Eval_22.PNG)
![Eval in](./doe_eval_png/DoE_Eval_23.PNG)

## Strucrure of Desc_in/Desc_out
        |_ DESC_IN
                |_ EVAL_INPUTS (namespace: 'ns_doe_eval', structuring,dynamic : self.sub_proc_build_status != 'Empty_SP') NB: Mandatory not to be empty (If not then warning)
                |_ EVAL_OUTPUTS (structuring, namespace: 'ns_doe_eval', dynamic : self.sub_proc_build_status != 'Empty_SP') NB: Mandatory not to be empty (If not then warning)
                |_ SAMPLING_ALGO (structuring,dynamic : self.sub_proc_build_status != 'Empty_SP')
                        |_ CUSTOM_SAMPLES_DF (namespace: 'ns_doe_eval', dynamic: SAMPLING_ALGO=="CustomDOE") NB: default DESIGN_SPACE depends on EVAL_INPUTS (As to be "Not empty") And Algo 
                        |_ DESIGN_SPACE (dynamic: SAMPLING_ALGO!="CustomDOE") NB: default DESIGN_SPACE depends on EVAL_INPUTS (As to be "Not empty") And Algo
                        |_ ALGO_OPTIONS (structuring, dynamic: SAMPLING_ALGO != None)
            |_ N_PROCESSES
            |_ WAIT_TIME_BETWEEN_FORK
            |_ NS_IN_DF (dynamic: if sub_process_ns_in_build is not None)
        |_ DESC_OUT
            |_ SAMPLES_INPUTS_DF
            |_ <var>_dict (internal namspace 'ns_doe', dynamic: sampling_algo!='None' and eval_inputs not empty and eval_outputs not empty, for <var> in eval_outputs)

##     Description of DESC parameters
        EVAL_INPUTS:                    selection of input variables to be used for the DoE
        EVAL_OUTPUTS:                   selection of output variables to be used for the DoE (the selected observables)
        SAMPLING_ALGO:                  method of defining the sampling input dataset for the variable chosen in self.EVAL_INPUTS
        N_PROCESSES:
        WAIT_TIME_BETWEEN_FORK:
        SAMPLES_INPUTS_DF :             copy of the generated or provided input sample
        ALL_NS_DICT :                   a map of ns keys: values
        CUSTOM_SAMPLES_DF:              provided input sample
        DESIGN_SPACE:                   provided design space
        ALGO_OPTIONS:                   options depending of the choice of self.SAMPLING_ALGO
        <var observable name>_dict':    for each selected output observable doe result
                                        associated to sample and the selected observable

## References
- Wikipedia definition of a DoE 
- xxx